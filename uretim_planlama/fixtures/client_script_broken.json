[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Global",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Profile Quantity Calculator Fixed",
  "script": "// Profil Miktar Hesaplama - Düzeltilmiş Versiyon\n\n// Ana hesaplama fonksiyonu\nwindow.calculateProfileQuantity = function(frm, cdt, cdn) {\n    console.log('calculateProfileQuantity çağrıldı');\n    const row = locals[cdt][cdn];\n    \n    // Debug için\n    console.log('Row data:', row);\n    \n    // Validation kontrolleri\n    if (!row.custom_is_profile) {\n        frappe.msgprint({\n            title: 'Uyarı',\n            message: 'Önce \"Profil mi?\" alanını işaretleyin!',\n            indicator: 'orange'\n        });\n        return;\n    }\n    \n    if (!row.custom_profile_length_m) {\n        frappe.msgprint({\n            title: 'Uyarı',\n            message: '\"Profil Boyu (m)\" alanını seçin!',\n            indicator: 'orange'\n        });\n        return;\n    }\n    \n    if (!row.custom_profile_length_qty || row.custom_profile_length_qty <= 0) {\n        frappe.msgprint({\n            title: 'Uyarı',\n            message: '\"Profil Boyu Adedi\" alanını doldurun!',\n            indicator: 'orange'\n        });\n        return;\n    }\n    \n    // Boy DocType'ından length değerini al\n    frappe.db.get_value('Boy', row.custom_profile_length_m, 'length').then(r => {\n        console.log('Boy değeri:', r);\n        \n        if (r.message && r.message.length) {\n            const length = parseFloat(r.message.length) || 0;\n            const qty = parseInt(row.custom_profile_length_qty) || 0;\n            const conversionFactor = parseFloat(row.conversion_factor) || 1;\n            \n            if (length <= 0 || qty <= 0) {\n                frappe.msgprint({\n                    title: 'Uyarı',\n                    message: 'Boy ve Adet değerleri 0\\'dan büyük olmalı!',\n                    indicator: 'orange'\n                });\n                return;\n            }\n            \n            const calculatedQty = (length * qty) / conversionFactor;\n            \n            console.log(`Hesaplama: ${length} x ${qty} / ${conversionFactor} = ${calculatedQty}`);\n            \n            // Frappe model ile güncelle\n            frappe.model.set_value(cdt, cdn, 'qty', calculatedQty).then(() => {\n                if (conversionFactor > 0) {\n                    frappe.model.set_value(cdt, cdn, 'stock_qty', calculatedQty * conversionFactor);\n                }\n                \n                // Başarı mesajı\n                frappe.show_alert({\n                    message: `✅ Miktar hesaplandı: ${length}m × ${qty} adet = ${calculatedQty.toFixed(2)}`,\n                    indicator: 'green'\n                });\n                \n                // Grid'i yenile\n                frm.refresh_field('items');\n            });\n        } else {\n            frappe.msgprint({\n                title: 'Hata',\n                message: 'Seçilen boy için uzunluk değeri bulunamadı!',\n                indicator: 'red'\n            });\n        }\n    }).catch(err => {\n        console.error('Boy değeri alınırken hata:', err);\n        frappe.msgprint({\n            title: 'Hata',\n            message: 'Boy değeri alınırken hata oluştu!',\n            indicator: 'red'\n        });\n    });\n};\n\n// Button stilini ayarla\n$(document).ready(function() {\n    // CSS ile buton stilini ayarla\n    $('<style>').prop('type', 'text/css').html(`\n        button[data-fieldname=\"custom_calculate_profile_qty\"],\n        .btn[data-fieldname=\"custom_calculate_profile_qty\"],\n        .frappe-control[data-fieldname=\"custom_calculate_profile_qty\"] button {\n            background-color: #dc3545 !important;\n            border-color: #dc3545 !important;\n            color: white !important;\n            font-weight: bold !important;\n        }\n        \n        button[data-fieldname=\"custom_calculate_profile_qty\"]:hover,\n        .btn[data-fieldname=\"custom_calculate_profile_qty\"]:hover,\n        .frappe-control[data-fieldname=\"custom_calculate_profile_qty\"] button:hover {\n            background-color: #c82333 !important;\n            border-color: #bd2130 !important;\n        }\n    `).appendTo('head');\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Purchase Receipt Profile Calculator",
  "script": "frappe.ui.form.on('Purchase Receipt Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Purchase Receipt buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Delivery Note Profile Calculator",
  "script": "frappe.ui.form.on('Delivery Note Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Delivery Note buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Sales Invoice Profile Calculator",
  "script": "frappe.ui.form.on('Sales Invoice Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Sales Invoice buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Purchase Invoice Profile Calculator",
  "script": "frappe.ui.form.on('Purchase Invoice Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Purchase Invoice buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Stock Entry Profile Calculator",
  "script": "frappe.ui.form.on('Stock Entry Detail', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Stock Entry buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Material Request Profile Calculator",
  "script": "frappe.ui.form.on('Material Request Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Material Request buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Sales Order Profile Calculator",
  "script": "frappe.ui.form.on('Sales Order Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Sales Order buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "module": "Uretim Planlama",
  "name": "Purchase Order Profile Calculator",
  "script": "frappe.ui.form.on('Purchase Order Item', {\n    custom_calculate_profile_qty: function(frm, cdt, cdn) {\n        console.log('Purchase Order buton tıklandı');\n        calculateProfileQuantity(frm, cdt, cdn);\n    }\n});",
  "view": "Form"
 }
]
